<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.soft1851.spring.mybatis.mapper.StudentMapper">

    <!--  新增  -->
    <insert id="insert" parameterType="Student" useGeneratedKeys="true"
            keyProperty="studentId">
        INSERT INTO t_student (clazz_id, student_name, hometown, birthday)
        VALUES (#{clazzId}, #{studentName}, #{hometown}, #{birthday})
    </insert>

   <!--  根据studentId删除学生  -->
    <delete id="delete" parameterType="int">
        DELETE
        FROM t_student
        WHERE student_id = #{studentId}
    </delete>

    <!-- 更新Student   -->
    <update id="update" parameterType="Student">
        UPDATE t_student
            SET student_name = #{studentName},
                hometown = #{hometown},
                birthday = #{birthday}
        WHERE student_id = #{studentId}
    </update>

    <!--  查询  -->
    <select id="getStudentById" parameterType="int" resultType="com.soft1851.spring.mybatis.entity.Student">
        SELECT *
        FROM t_student
        WHERE student_id = #{studentId}
    </select>

   <!-- 批量新增   -->
    <insert id="batchInsert" parameterType="com.soft1851.spring.mybatis.entity.Student">
        INSERT INTO t_student VALUES
            <foreach collection="students" item="item" index="index" separator=",">
                (#{item.studentId}, #{item.clazzId}, #{item.studentName},
                 #{item.hometown}, #{item.birthday})
            </foreach>
    </insert>

    <!-- 批量删除   -->
    <delete id="batchDelete" parameterType="com.soft1851.spring.mybatis.entity.Student">
        DELETE FROM t_student
        WHERE student_id IN
            <foreach collection="idList" item="item" index="index" open='(' separator="," close=')'>
                #{item}
            </foreach>
    </delete>

    <!--  批量修改  -->
    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="updateList" item="item" index="index" open="" close="" separator=";">
            UPDATE t_student t
            <set>
                t.student_name = #{item.studentName}
            </set>
            WHERE t.student_id = #{item.studentId}
        </foreach>
    </update>

    <!--  查询1  -->
    <select id="selectLimit" resultType="Student">
        SELECT student_id , clazz_id ,student_name ,hometown ,birthday
        FROM t_student
        WHERE clazz_id = ${2} AND hometown like '%江苏%'
    </select>

   <!-- 查询2   -->
    <select id="selectLimitByDynamicSql" parameterType="Student" resultType="Student">
        SELECT student_id , clazz_id ,student_name ,hometown ,birthday
        FROM t_student
        <where>
            <if test="clazzId != null">
                clazz_id = #{clazzId}
            </if>
            <if test="hometown != null">
                AND hometown like "%"#{hometown}"%"
            </if>
            <if test="studentName != null">
                AND student_name like #{studentName}
            </if>
        </where>
    </select>


    <!--查询所有学生，按生日排序，多对一关联查询学生所在班级的信息-->
    <resultMap id="studentMap" type="Student">
        <id property="studentId" column="student_id"></id>
        <result property="studentName" column="student_name"></result>
        <result property="hometown" column="hometown"></result>
        <result property="birthday" column="birthday"></result>
        <association property="clazz" javaType="Clazz">
            <id property="clazzId" column="clazz_id"></id>
            <result property="clazzName" column="clazz_name"></result>
        </association>
    </resultMap>
    <select id="selectAll" resultMap="studentMap" parameterType="Student">
        SELECT s.student_id, s.student_name, s.hometown, s.birthday, c.clazz_name
        FROM t_student s
        RIGHT JOIN t_clazz c
            ON s.clazz_id = c.clazz_id
        ORDER BY s.birthday DESC
    </select>

</mapper>